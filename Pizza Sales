##In this seried of queries, I will be answer the following questions about pizza sales in a pizzeria to create a dashboard displaying these results:
1.What are the Total orders?
2.What are the Total sales?
3.How many Total items are sold in the pizzaeria?
4.What is the Average order value?
5. What are the Sales by category?
6. What are the Top selling items?
7. What are the Orders by hour?
8. What are the Sales by hour?
9. How many Orders by address?
10. How many orders are Orders by delivery/pick up?
##

Select COUNT(order_id) 
FROM Pizza.orders

;

SELECT
	o.order_id,
	i.item_price,
	o.quantity,
	i.item_cat,
	i.item_name,
	o.created_at,
	a.delivery_address1,
	a.delivery_address2,
	a.delivery_city,
	a.delivery_zipcode,
	o.delivery 
FROM
	Pizza.Orders o
	LEFT JOIN Pizza.item i ON o.item_id = i.item_id
	LEFT JOIN Pizza.Address a ON o.add_id = a.add_id;
  
  ## These next queries will answer the following questions:
1.Total quantity by ingredient
Total cost of ingredients
3.Calculated cost of pizza
4.Percentage stock remaining by ingredient
In these queries you will notice that I create sub-queries of data to use multiple aggregate functions using the same data. ##
 
 
 
Select 
s1.item_name,
s1.ing_id,
s1.ing_name,
s1.ing_weight,
s1.ing_price,
s1.order_quantity,
s1.recipe_quantity,
s1.order_quantity*s1.recipe_quantity as ordered_weight,
s1.ing_price/s1.ing_weight as unit_cost,
(s1.order_quantity*s1.recipe_quantity)*(s1.ing_price/s1.ing_weight) as ingredient_cost

from (
SELECT 
o.item_id,
i.sku,
i.item_name,
r.ing_id,
r.quantity AS recipe_quantity,
ing.ing_name,
SUM(o.quantity) as order_quantity,
ing.ing_weight,
ing.ing_price
FROM Pizza.orders o 
Left JOIN Pizza.item i ON o.item_id=i.item_id
LEFT JOIN Pizza.Recipe r ON i.sku=r.recipe_id
LEFT JOIN Pizza.Ingredients ing ON ing.ing_id=r.ing_id
group by o.item_id, 
i.sku,
i.item_name,
r.ing_id,
r.quantity,
ing.ing_name,
ing.ing_weight,
ing.ing_price)
S1;



Select 
s2.ing_name,
s2.ordered_weight,
ing.ing_weight*inv.quantity as total_inv_weight,
(ing.ing_weight*inv.quantity)-s2.ordered_weight as remaining_weight

 FROM (SELECT
ing_id,
ing_name,
sum(ordered_weight) as ordered_weight
FROM Pizza.STOCK1
group by ing_name, 
ing_id) s2
Left JOIN Pizza.inventory inv ON inv.item_id=s2.ing_id
LEFT JOIN pizza.ingredients ing ON ing.ing_id = s2.ing_id
;


SELECT 
r.date,
s.first_name,
s.last_name,
s.hourly_rate,
sh.start_time,
sh.end_time

FROM rotation r
LEFT JOIN Staff s on r.staff_id=s.staff_id
LEFT JOIN shift sh on r.shift_id=sh.shift_id;




